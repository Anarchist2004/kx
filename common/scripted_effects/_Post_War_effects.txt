#	Scripted triggers for Post War events
#
#	By Nijato and Rylock

clean_up_african_states = {
	# French claims
	if = {
		limit = {
			NOT = { tag = FRA }
			OR = {
				is_in_faction_with = FRA
				is_subject_of = FRA
			}
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = FRA
					is_claimed_by = FRA
					has_variable = ambition_area_@FRA
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			FRA = { transfer_state = PREV }
		}
	}
	if = {
		limit = {
			NOT = { tag = NFA }
			OR = {
				is_in_faction_with = NFA
				is_subject_of = NFA
			}
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = NFA
					is_claimed_by = NFA
					has_variable = ambition_area_@NFA
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			NFA = { transfer_state = PREV }
		}
	}
	# Portuguese claims
	if = {
		limit = {
			NOT = { tag = POR }
			OR = {
				is_in_faction_with = POR
				is_subject_of = POR
			}
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = POR
					is_claimed_by = POR
					has_variable = ambition_area_@POR
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			POR = { transfer_state = PREV }
		}
	}
	# South African claims
	if = {
		limit = {
			NOT = { tag = SAF }
			OR = {
				is_in_faction_with = SAF
				is_subject_of = SAF
			}
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = SAF
					is_claimed_by = SAF
					has_variable = ambition_area_@SAF
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			SAF = { transfer_state = PREV }
		}
	}
	# British claims
	if = {
		limit = {
			NOT = { tag = ENG }
			OR = {
				is_in_faction_with = ENG
				is_subject_of = ENG
			}
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = ENG
					is_claimed_by = ENG
					has_variable = ambition_area_@ENG
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			ENG = { transfer_state = PREV }
		}
	}
	if = {
		limit = {
			NOT = { tag = GBR }
			OR = {
				is_in_faction_with = GBR
				is_subject_of = GBR
			}
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = GBR
					is_claimed_by = GBR
					has_variable = ambition_area_@GBR
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			GBR = { transfer_state = PREV }
		}
	}
	if = {
		limit = {
			NOT = { tag = CAN }
			OR = {
				is_in_faction_with = CAN
				is_subject_of = CAN
			}
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = CAN
					is_claimed_by = CAN
					has_variable = ambition_area_@CAN
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			CAN = { transfer_state = PREV }
		}
	}
	# when all else fails, give it to the faction leader
	if = {
		limit = {
			is_in_faction = yes
			is_faction_leader = no
			is_actual_major = no
		}
		random_country = {
			limit = {
				is_faction_leader = yes
				is_in_faction_with = PREV
			}
			save_event_target_as = leader
		}
		every_owned_state = {
			limit = {
				is_on_continent = africa
				has_state_flag = GER_capitulation_transfer
				is_claim_or_core_or_ambition_of_PREV = no
			}
			event_target:leader = { transfer_state = PREV }
		}
	}
}

take_occupied_states_in_africa = {
	every_state = {
		limit = {
			is_on_continent = africa
			controller = { has_war_with = GER }
			OR = {
				is_coastal = yes
				any_neighbor_state = {
					owner = { has_war_with = GER }
				}
			}
			is_owned_by_GER_or_MAF = yes
			african_state_can_be_taken = yes
		}
		set_state_flag = GER_capitulation_transfer
		controller = {
			save_event_target_as = new_controller
			transfer_state = PREV
		}
		#Kenya
		if = {
			limit = {
				OR = {
					state = 892 #Amboland
					state = 925 #Gallaland
					state = 969 #Rift Valley
					state = 547 #Kenya
					state = 970 #Mombasa
				}
			}
			every_state = {
				limit = {
					OR = {
						state = 892 #Amboland
						state = 925 #Gallaland
						state = 969 #Rift Valley
						state = 547 #Kenya
						state = 970 #Mombasa
					}
					is_owned_by_GER_or_MAF = yes
				}
				set_state_flag = GER_capitulation_transfer
				event_target:new_controller = { transfer_state = PREV }
			}
		}
		#Mozambique
		if = {
			limit = {
				OR = {
					state = 544
					state = 954
					state = 950
					is_core_of = MZB
				}
			}
			every_state = {
				limit = {
					OR = {
						state = 544
						state = 954
						state = 950
						is_core_of = MZB
					}
					is_owned_by_GER_or_MAF = yes
				}
				set_state_flag = GER_capitulation_transfer
				event_target:new_controller = { transfer_state = PREV }
			}
		}
		#Angola
		if = {
			limit = {
				OR = {
					state = 540
					state = 914
					state = 916
					state = 917
					state = 959
					is_core_of = ANG
				}
			}
			every_state = {
				limit = {
					OR = {
						state = 540
						state = 914
						state = 916
						state = 917
						state = 959
						is_core_of = ANG
					}
					is_owned_by_GER_or_MAF = yes
				}
				set_state_flag = GER_capitulation_transfer
				event_target:new_controller = { transfer_state = PREV }
			}
		}
		#Zambia
		if = {
			limit = {
				OR = {
					state = 957 #Western Barotseland
					state = 958 #Eastern Barotseland
					state = 813 #South Zambezia
					state = 956 #Northern Zambezia
					state = 955 #Eastern Zambezia
				}
			}
			every_state = {
				limit = {
					OR = {
						state = 957 #Western Barotseland
						state = 958 #Eastern Barotseland
						state = 813 #South Zambezia
						state = 956 #Northern Zambezia
						state = 955 #Eastern Zambezia
					}
					is_owned_by_GER_or_MAF = yes
				}
				set_state_flag = GER_capitulation_transfer
				event_target:new_controller = { transfer_state = PREV }
			}
		}
		#Gabon
		if = {
			limit = { state = 539 } #Gabon
			539 = {
				if = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					event_target:new_controller = { transfer_state = PREV }
				}
			}
		}
		#Congo
		if = {
			limit = {
				OR = {
					state = 953 #Tekeland
					state = 881 #Bas-Congo
					state = 928 #Middle Congo
				}
			}
			every_state = {
				limit = {
					OR = {
						state = 953 #Tekeland
						state = 881 #Bas-Congo
						state = 928 #Middle Congo
					}
					is_owned_by_GER_or_MAF = yes
				}
				set_state_flag = GER_capitulation_transfer
				event_target:new_controller = { transfer_state = PREV }
			}
		}
		#Namibia
		if = {
			limit = {
				OR = {
					state = 964 #Amboland
					state = 541 #Southwest Africa
				}
			}
			every_state = {
				limit = {
					OR = {
						state = 964 #Amboland
						state = 541 #Southwest Africa
					}
					is_owned_by_GER_or_MAF = yes
				}
				set_state_flag = GER_capitulation_transfer
				event_target:new_controller = { transfer_state = PREV }
			}
		}
		#Nigeria
		if = {
			limit = {
				OR = {
					state = 558 #Southern Nigeria
					state = 662 #Northern Nigeria
					state = 878 #Hausaland
					state = 913 #Bornu
					state = 973 #Lagos
				}
			}
			every_state = {
				limit = {
					OR = {
						state = 558 #Southern Nigeria
						state = 662 #Northern Nigeria
						state = 878 #Hausaland
						state = 913 #Bornu
						state = 973 #Lagos
					}
					is_owned_by_GER_or_MAF = yes
				}
				set_state_flag = GER_capitulation_transfer
				event_target:new_controller = { transfer_state = PREV }
			}
		}
		#Ivory Coast
		if = {
			limit = {
				OR = {
					state = 963 #Akanland
					state = 807 #Ivory Coast
				}
			}
			every_state = {
				limit = {
					OR = {
						state = 963 #Akanland
						state = 807 #Ivory Coast
					}
					is_owned_by_GER_or_MAF = yes
				}
				set_state_flag = GER_capitulation_transfer
				event_target:new_controller = { transfer_state = PREV }
			}
		}
		#Liberia
		if = {
			limit = { is_core_of = LIB }
			every_state = {
				limit = {
					is_core_of = LIB
					is_owned_by_GER_or_MAF = yes
				}
				set_state_flag = GER_capitulation_transfer
				event_target:new_controller = { transfer_state = PREV }
			}
		}
	}

	if = {
		limit = {
			any_state = {
				is_on_continent = africa
				controller = { has_war_with = GER }
				OR = {
					is_coastal = yes
					any_neighbor_state = {
						owner = { has_war_with = GER }
					}
				}
				is_owned_by_GER_or_MAF = yes
				african_state_can_be_taken = yes
			}
		}
		take_occupied_states_in_africa = yes
	}
	else = {
		every_country = {
			limit = {
				has_war_with = GER
				any_owned_state = {
					is_on_continent = africa
					has_state_flag = GER_capitulation_transfer
				}
			}
			clean_up_african_states = yes
		}
	}
}

CAN_give_connected_USA_states_NEE = {
	CAN = {
		every_owned_state = {
			limit = {
				is_core_of = USA
				any_neighbor_state = {
					is_owned_by = NEE
					NOT = { state = 393 } #Michigan
				}
				NOT = {
					is_core_of = CAN
					is_claimed_by = CAN
				}
			}
			if = {
				limit = { is_claimed_by = NEE }
				remove_claim_by = NEE
				add_core_of = NEE
			}
			else_if = {
				limit = { NOT = { is_core_of = NEE } }
				add_core_of = NEE
			}
			NEE = { transfer_state = PREV }
		}
	}
	if = {
		limit = {
			CAN = {
				any_owned_state = {
					is_core_of = USA
					any_neighbor_state = {
						is_owned_by = NEE
						NOT = { state = 393 } #Michigan
					}
					NOT = {
						is_core_of = CAN
						is_claimed_by = CAN
					}
				}
			}
		}
		CAN_give_connected_USA_states_NEE = yes
	}
}

CAN_give_connected_USA_states_CAL = {
	CAN = {
		every_owned_state = {
			limit = {
				is_core_of = USA
				any_neighbor_state = {
					is_owned_by = CAL
					NOT = { state = 393 } #Michigan
				}
				NOT = {
					is_core_of = CAN
					is_claimed_by = CAN
					state = 357 #Maine
					state = 796 #Upstate New York
					state = 931 #Connecticut
					state = 932 #Massachusetts
					state = 933 #Vermont
					state = 934 #New Hampshire
					state = 935 #Rhode Island
				}
			}
			if = {
				limit = { is_claimed_by = CAL }
				remove_claim_by = CAL
				add_core_of = CAL
			}
			else_if = {
				limit = { NOT = { is_core_of = CAL } }
				add_core_of = CAL
			}
			CAL = { transfer_state = PREV }
		}
	}
	if = {
		limit = {
			CAN = {
				any_owned_state = {
					is_core_of = USA
					any_neighbor_state = {
						is_owned_by = CAL
						NOT = { state = 393 } #Michigan
					}
					NOT = {
						is_core_of = CAN
						is_claimed_by = CAN
						state = 357 #Maine
						state = 796 #Upstate New York
						state = 931 #Connecticut
						state = 932 #Massachusetts
						state = 933 #Vermont
						state = 934 #New Hampshire
						state = 935 #Rhode Island
					}
				}
			}
		}
		CAN_give_connected_USA_states_CAL = yes
	}
}


# This can be used normally: TAG = { white_peace_with_ROOT = yes }
# Remember: ROOT is the country running the current event
# TAG is the country you want ROOT to completely be at peace with
# meaning it will ensure peace with all faction members and puppets on either side

white_peace_with_ROOT = {
	hidden_effect = {
		save_event_target_as = peace_country

		# first check for a faction leader to white peace with
		if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = no
			}
			set_country_flag = KR_war_skip
			random_country = {
				limit = {
					is_in_faction_with = event_target:peace_country
					is_faction_leader = yes
					has_war_with = ROOT
				}
				white_peace = ROOT
			}
		}
		if = {
			limit = {
				ROOT = {
					is_in_faction = yes
					is_faction_leader = no
				}
			}
			set_country_flag = KR_war_skip
			random_country = {
				limit = {
					is_in_faction_with = ROOT
					is_faction_leader = yes
					has_war_with = event_target:peace_country
				}
				white_peace = event_target:peace_country
			}
		}

		# then check for an overlord to white peace with
		if = {
			limit = {
				is_subject = yes
				overlord = { has_war_with = ROOT }
			}
			set_country_flag = KR_war_skip
			overlord = { white_peace = ROOT }
		}
		if = {
			limit = {
				ROOT = { is_subject = yes }
			}
			set_country_flag = KR_war_skip
			random_country = {
				limit = {
					ROOT = { is_subject_of = PREV }
					has_war_with = event_target:peace_country
				}
				white_peace = event_target:peace_country
			}
		}
	}

	if = {
		limit = { has_country_flag = KR_war_skip }
		clr_country_flag = KR_war_skip
		country_event = { id = kr.political.205 hours = 2 }
	}
	else = {
		white_peace = ROOT
	}

	hidden_effect = {
		# now double-check to ensure all faction members are peaced out
		every_enemy_country = {
			limit = {
				OR = {
					is_in_faction_with = event_target:peace_country
					is_subject_of = event_target:peace_country
				}
			}
			country_event = { id = kr.political.205 hours = 2 }
		}
		event_target:peace_country = {
			every_enemy_country = {
				limit = {
					OR = {
						is_in_faction_with = ROOT
						is_subject_of = ROOT
					}
				}
				country_event = { id = kr.political.206 hours = 2 }
			}
		}
	}
}

# NOTE: "save_event_target_as = white_peace_receiver" needs to be performed first
# Then you use "TAG = { white_peace_with_TARGET = yes }"
# TAG is the country you want the event target to completely be at peace with
# meaning it will ensure peace with all faction members and puppets on either side
# remember: if you don't use TAG and just use "white_peace_with_TARGET = yes" then the event target is making peace with ROOT

white_peace_with_TARGET = {
	hidden_effect = {
		save_event_target_as = peace_country

		# first check for a faction leader to white peace with
		if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = no
			}
			set_country_flag = KR_war_skip
			random_country = {
				limit = {
					is_in_faction_with = event_target:peace_country
					is_faction_leader = yes
					has_war_with = event_target:white_peace_receiver
				}
				white_peace = event_target:white_peace_receiver
			}
		}
		if = {
			limit = {
				event_target:white_peace_receiver = {
					is_in_faction = yes
					is_faction_leader = no
				}
			}
			set_country_flag = KR_war_skip
			random_country = {
				limit = {
					is_in_faction_with = event_target:white_peace_receiver
					is_faction_leader = yes
					has_war_with = event_target:peace_country
				}
				white_peace = event_target:peace_country
			}
		}

		# then check for an overlord to white peace with
		if = {
			limit = {
				is_subject = yes
				overlord = { has_war_with = event_target:white_peace_receiver }
			}
			set_country_flag = KR_war_skip
			overlord = { white_peace = event_target:white_peace_receiver }
		}
		if = {
			limit = {
				event_target:white_peace_receiver = { is_subject = yes }
			}
			set_country_flag = KR_war_skip
			random_country = {
				limit = {
					event_target:white_peace_receiver = { is_subject_of = PREV }
					has_war_with = event_target:peace_country
				}
				white_peace = event_target:peace_country
			}
		}
	}

	if = {
		limit = { has_country_flag = KR_war_skip }
		clr_country_flag = KR_war_skip
		country_event = { id = kr.political.207 hours = 2 }
		else = {
			white_peace = event_target:white_peace_receiver
		}
	}

	hidden_effect = {
		# now double-check to ensure all faction members are peaced out
		event_target:white_peace_receiver = {
			every_enemy_country = {
				limit = {
					OR = {
						is_in_faction_with = event_target:peace_country
						is_subject_of = event_target:peace_country
					}
				}
				country_event = { id = kr.political.207 hours = 2 }
			}
		}
		event_target:peace_country = {
			every_enemy_country = {
				limit = {
					OR = {
						is_in_faction_with = event_target:white_peace_receiver
						is_subject_of = event_target:white_peace_receiver
					}
				}
				country_event = { id = kr.political.206 hours = 2 }
			}
		}
	}
}

